#!/usr/bin/env ruby

require 'scrmbale'

class GameApp
  TIME_LIMIT = 120
  SOURCE_FILE = "../../data/puzzles.json"

  def initialize
    @game = Scrmbale::Game.new(load_puzzles)
  end

  def load_puzzles
    f = File.open(File.expand_path(SOURCE_FILE, __FILE__), "r")
    puzzles = f.read
    f.close
    return puzzles
  end

  def quit
    puts "\nYour final score: #{@game.score}"
    exit
  end

  def print_board
    @game.words.each do |w|
      if w.discovered?
        puts "  " + w.text.upcase.split("").join(" ")
      else
        puts "  " + ("_" * w.text.length).split("").join(" ")
      end
    end
  end

  def game_over
    puts "You didn't get the big word! Game over."
    quit
  end

  def prompt(text)
    ('%s> ' % text).display
    input = gets
    quit if input.nil? # ^D
    input.chomp
  end

  def time_remaining
    TIME_LIMIT - (Time.now.to_i - @start_time)
  end

  def run
    trap "SIGINT" do
      quit
    end

    loop do # Game loop
      catch :round do
        @start_time = Time.now.to_i
        loop do # Puzzle loop
          print_board
          input = prompt('[Score: %s] %s (%ss)' % [@game.score, @game.letters, time_remaining])
          if (time_remaining <= 0)
            puts "Time's up!"
            game_over unless @game.big_word_complete?
            prompt('Press enter to start next round')
            throw :round
          end
          if input.empty?
            @game.shuffle
          else
            if @game.guess(input)
              puts "Great!"
              puts "You got the big word!" if input.length == 6
              if @game.complete?
                puts "You got all the words!"
                prompt('Press enter to start next round')
                throw :round
              end
            else
              puts "No good."
            end
          end
        end
      end
      round = @game.next_round
      if round.nil?
        puts "Wow, we ran out of puzzles."
        quit
      end
    end
  end
end

puts "Use Ctrl+C to exit."
GameApp.new.run
